-- -*- lua -*-
testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {"keyword" },

   active = 1,
   testName = "keyword",
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     LMOD_TERM_WIDTH=80;                export LMOD_TERM_WIDTH
     MODULEPATH_ROOT=$(projectDir)/mf;  export MODULEPATH_ROOT
     MODULEPATH=$(projectDir)/mf/Core:$(projectDir)/mf/Compiler/intel/10.1:$(projectDir)/mf/MPI/intel/10.1/openmpi/1.2.6;
     export MODULEPATH
     ORIG_HOME=`(cd $HOME; pwd)`
     HOME=$(outputDir)

     rm -f _stderr.* _stdout.* err.* out.*
     rm -rf .lmod.d

     lua $(projectDir)/src/lmod.in.lua bash keyword graph > _stdout.orig 2> err.txt

     HOME=$ORIG_HOME

     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
