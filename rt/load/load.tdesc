-- -*- lua -*-

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {"load" },

   active = 1,
   testName = "load",
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH_ROOT=$(projectDir)/mf;  export MODULEPATH_ROOT

     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d .lmodrc.lua
     cp $(projectDir)/init/lmodrc.lua .lmodrc.lua

     runLmod --version                                      # 1
     runLmod use -a $projectDir/mf/Core $projectDir/mf/Beta # 2
     runLmod use $projectDir/mf/notDir                      # 3
     runLmod load admin PrgEnv                              # 4
     runLmod load gotoblas/1.30-beta                        # 5
     runLmod rm   gotoblas/1.30-beta                        # 6
     runLmod try-add gotoblas123 intel                      # 7
     runLmod load gotoblas                                  # 8
     runLmod load multi                                     # 9
     runLmod unload multi                                   # 10
     runLmod load boost                                     # 11
     runLmod use -a $testDir/mf/Core                        # 12
     runLmod avail                                          # 13
     runLmod -d avail                                       # 14
     runLmod unload boost                                   # 15
     runLmod load boost/1.33.0                              # 16
     runLmod load boost/1.57.0                              # 17
     runLmod load boost                                     # 18
     runLmod load alex                                      # 19
     runLmod load D                                         # 20
     runLmod --latest load rtm_intel                        # 21
     runLmod list                                           # 22
     runLmod use    $testDir/mf/Share                       # 23
     runLmod use -a $testDir/mf/Scratch                     # 24
     runLmod -r avail A B                                   # 25
     runLmod load  A B                                      # 26
     runLmod list                                           # 27
     runLmod load  DoesNotExist                             # 28
     runLmod list                                           # 29
     runLmod tablelist                                      # 30
     runLmod avail                                          # 31
     runLmod avail C                                        # 32
     runLmod load C                                         # 33
     runLmod list                                           # 34
     runLmod load rtm_intel                                 # 35
     runLmod load go                                        # 36
     

     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
