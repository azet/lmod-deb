-- -*- lua -*-

local testName = "changeMPATH"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {testName },

   active = 1,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH_ROOT=$(projectDir)/mf;   export MODULEPATH_ROOT
     MODULEPATH="$(projectDir)/mf/Core"; export MODULEPATH

     rm -rf _stderr.* _stdout.* err.* out.* .lmod.d .lmodrc.lua
     cp $(projectDir)/init/lmodrc.lua .lmodrc.lua

     runLmod --version                        # 1
     runLmod load admin PrgEnv                # 2
     runLmod save default                     # 3

     runLmod purge                            # 4
     unsetMT
     MODULEPATH=$(testDir)/mf/Core:$(projectDir)/mf/Core

     runLmod restore                          # 5

     runLmod purge                            # 6
     unsetMT
     MODULEPATH=$(projectDir)/mf/Core

     runLmod use  $(testDir)/mf/Core          # 7
     runLmod load admin PrgEnv                # 8
     runLmod list                             # 9
     runLmod save default                     #10

     runLmod purge                            #11
     unsetMT
     MODULEPATH=$(projectDir)/mf/Core

     runLmod restore                          #12
     runLmod list                             #13
     runLmod save foo                         #14

     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
