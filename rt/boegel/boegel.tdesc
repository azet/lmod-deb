-- -*- lua -*-
local testName = "boegel"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test between
   ]],
   keywords = {testName },

   active = 1,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     export MODULEPATH_ROOT=$(testDir)/mf
     export MODULEPATH=$MODULEPATH_ROOT/Core/toolchain

     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d

     runLmod --version                           # 1
     runLmod load gompi                          # 2
     runLmod list                                # 3
     runLmod avail                               # 4
     runLmod -t avail                            # 5
     runLmod purge                               # 6
     unsetMT
     MODULEPATH=$MODULEPATH_ROOT/Core/compiler   
     runLmod load GCC                            # 7
     runLmod avail                               # 8
     unsetMT
     unset MODULEPATH
     runLmod use $MODULEPATH_ROOT/Core/Broken    # 9
     runLmod avail                               #10
     runLmod -t avail                            #11


     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
