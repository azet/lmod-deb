===========================
step 1
lua ProjectDIR/src/lmod.in.lua bash --regression_testing --version
===========================
Modules based on Lua: Version 6.4.3  2016-06-17 09:58
    by Robert McLay mclay@tacc.utexas.edu
===========================
step 2
lua ProjectDIR/src/lmod.in.lua bash --regression_testing use -a ProjectDIR/mf/Core ProjectDIR/mf/Beta ProjectDIR/rt/spider/mf/Core ProjectDIR/rt/spider/mf/Core2
===========================
===========================
step 3
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider
===========================
The following is a list of the modules currently available:
  PrgEnv: PrgEnv
  R: R/2.1.5
  admin: admin/admin-1.0
  alex: alex/1.0
  apps: apps/moabdev
  apps/gromacs: apps/gromacs/4.0.7, apps/gromacs/4.6.3-debug, apps/gromacs/4.6.3
  boost: boost/1.46.0, boost/1.47.1, boost/1.49.0
  bwa: bwa/0.7.1, bwa/0.7.2, bwa/0.7.9a, bwa/0.7.9, bwa/0.7.10
  cmplrs/intel: cmplrs/intel/14.0
  gcc: gcc/4.2.3
  git: git/1.6.3.1, git/1.7.4, git/1.7.4.3
  gotoblas: gotoblas/1.20, gotoblas/1.26, gotoblas/1.30-beta, gotoblas/1.30, gotoblas/1.31, gotoblas/1.32, gotoblas/1.33
    Blas Level 1, 2, 3 routines
  greenlet: greenlet/0.4.0
    The greenlet package is a spin-off of Stackless, a version of CPython that supports micro-threads called "tasklets". Tasklets run pseudo-concurrently (typically in a single or a few OS-level threads) and are synchronized with data exchanges on "channels". A "greenlet", on the other hand, is
    a still more primitive notion of micro-thread with no implicit scheduling; coroutines, in other words. This is useful when you want to control exactly when your code runs. - Homepage: https://github.com/python-greenlet/greenlet
  intel: intel/intel
  is-dyna: is-dyna/1.0, is-dyna/2.0
  junk/a/c: junk/a/c/1.0
  junk/b/c: junk/b/c/2.0
  junk/d: junk/d/3.0
  local: local/local
  mpi/openmpi: mpi/openmpi/1.6.5
  mpich2: mpich2/1.0.7
  multi: multi/multi
  noweb: noweb/2.10c
  openmpi: openmpi/1.2.6
  parmetis: parmetis/3.1, parmetis/4.0.1
    Parallel graph partitioning and fill-reduction matrix ordering routines
  petsc: petsc/3.1, petsc/3.2
  phdf5: phdf5/1.8.2, phdf5/1.8.9, phdf5/1.8.10
  r: r/2.1.5
  unix: unix/unix
To learn more about a package enter:
   $ module spider Foo
where "Foo" is the name of a module
To find detailed information about a particular package you
must enter the version if there is more than one version:
   $ module spider Foo/11.1
===========================
step 4
lua ProjectDIR/src/lmod.in.lua bash --regression_testing -t spider
===========================
PrgEnv
R/
R/2.1.5
admin/
admin/admin-1.0
alex/
alex/1.0
apps/
apps/moabdev
apps/gromacs/
apps/gromacs/4.0.7
apps/gromacs/4.6.3-debug
apps/gromacs/4.6.3
boost/
boost/1.46.0
boost/1.47.1
boost/1.49.0
bwa/
bwa/0.7.1
bwa/0.7.2
bwa/0.7.9a
bwa/0.7.9
bwa/0.7.10
cmplrs/intel/
cmplrs/intel/14.0
gcc/
gcc/4.2.3
git/
git/1.6.3.1
git/1.7.4
git/1.7.4.3
gotoblas/
gotoblas/1.20
gotoblas/1.26
gotoblas/1.30-beta
gotoblas/1.30
gotoblas/1.31
gotoblas/1.32
gotoblas/1.33
greenlet/
greenlet/0.4.0
intel/
intel/intel
is-dyna/
is-dyna/1.0
is-dyna/2.0
junk/a/c/
junk/a/c/1.0
junk/b/c/
junk/b/c/2.0
junk/d/
junk/d/3.0
local/
local/local
mpi/openmpi/
mpi/openmpi/1.6.5
mpich2/
mpich2/1.0.7
multi/
multi/multi
noweb/
noweb/2.10c
openmpi/
openmpi/1.2.6
parmetis/
parmetis/3.1
parmetis/4.0.1
petsc/
petsc/3.1
petsc/3.2
phdf5/
phdf5/1.8.2
phdf5/1.8.9
phdf5/1.8.10
r/
r/2.1.5
unix/
unix/unix
===========================
step 5
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider mpich2
===========================
  mpich2: mpich2/1.0.7
    You will need to load all module(s) on any one of the lines below before the "mpich2/1.0.7" module is available to load.
      intel/intel
===========================
step 6
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider mpich2/1.0.7
===========================
  mpich2: mpich2/1.0.7
    You will need to load all module(s) on any one of the lines below before the "mpich2/1.0.7" module is available to load.
      intel/intel
===========================
step 7
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider parmetis/3.1
===========================
  parmetis: parmetis/3.1
    Description:
      Parallel graph partitioning and fill-reduction matrix ordering routines
    Properties:
      built for host and native MIC
    This module can be loaded directly: module load parmetis/3.1
    Additional variants of this module can also be loaded after loading the following modules:
      gcc/4.2.3  openmpi/1.2.6
      intel/intel  openmpi/1.2.6
===========================
step 8
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider mpich2me
===========================
Lmod has detected the following error: Unable to find: "mpich2me"
===========================
step 9
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider R
===========================
  R: R/2.1.5
     Other possible modules matches:
        PrgEnv, apps/gromacs, cmplrs/intel, greenlet, parmetis, r
    This module can be loaded directly: module load R/2.1.5
  To find other possible module matches do:
      module -r spider '.*R.*'
===========================
step 10
lua ProjectDIR/src/lmod.in.lua bash --regression_testing -r spider ^R
===========================
  R: R/2.1.5
    This module can be loaded directly: module load R/2.1.5
===========================
step 11
lua ProjectDIR/src/lmod.in.lua bash --regression_testing -r spider ^[Rr]
===========================
  R: R/2.1.5
    This module can be loaded directly: module load R/2.1.5
  r: r/2.1.5
    This module can be loaded directly: module load r/2.1.5
===========================
step 12
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider mpich2/1.0.5
===========================
Lmod has detected the following error: Unable to find: "mpich2/1.0.5"
===========================
step 13
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider is-dyna
===========================
  is-dyna:
     Versions:
        is-dyna/1.0
        is-dyna/2.0
  For detailed information about a specific "is-dyna" module (including how to load the modules) use the module's full name.
  For example:
     $ module spider is-dyna/2.0
===========================
step 14
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider is-dyna/1.0
===========================
  is-dyna: is-dyna/1.0
    This module can be loaded directly: module load is-dyna/1.0
===========================
step 15
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider bwa
===========================
  bwa:
     Versions:
        bwa/0.7.1
        bwa/0.7.2
        bwa/0.7.9a
        bwa/0.7.9
        bwa/0.7.10
  For detailed information about a specific "bwa" module (including how to load the modules) use the module's full name.
  For example:
     $ module spider bwa/0.7.9a
===========================
step 16
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider gromacs
===========================
  apps/gromacs:
     Versions:
        apps/gromacs/4.0.7
        apps/gromacs/4.6.3-debug
        apps/gromacs/4.6.3
  For detailed information about a specific "apps/gromacs" module (including how to load the modules) use the module's full name.
  For example:
     $ module spider apps/gromacs/4.6.3
===========================
step 17
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider apps/gromacs
===========================
  apps/gromacs:
     Versions:
        apps/gromacs/4.0.7
        apps/gromacs/4.6.3-debug
        apps/gromacs/4.6.3
     Other possible modules matches:
        apps
  To find other possible module matches do:
      module -r spider '.*apps/gromacs.*'
  For detailed information about a specific "apps/gromacs" module (including how to load the modules) use the module's full name.
  For example:
     $ module spider apps/gromacs/4.6.3
===========================
step 18
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider apps/gromacs/4.6.3
===========================
  apps/gromacs: apps/gromacs/4.6.3
    You will need to load all module(s) on any one of the lines below before the "apps/gromacs/4.6.3" module is available to load.
      cmplrs/intel/14.0  mpi/openmpi/1.6.5
===========================
step 19
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider apps/gromacs/4.6.3-debug
===========================
  apps/gromacs: apps/gromacs/4.6.3-debug
    You will need to load all module(s) on any one of the lines below before the "apps/gromacs/4.6.3-debug" module is available to load.
      cmplrs/intel/14.0  mpi/openmpi/1.6.5
===========================
step 20
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider
===========================
The following is a list of the modules currently available:
  PrgEnv: PrgEnv
  R: R/2.1.5
  admin: admin/admin-1.0
  alex: alex/1.0
  apps: apps/moabdev
  apps/gromacs: apps/gromacs/4.0.7, apps/gromacs/4.6.3-debug, apps/gromacs/4.6.3
  boost: boost/1.46.0, boost/1.47.1, boost/1.49.0
  bwa: bwa/0.7.1, bwa/0.7.2, bwa/0.7.9a, bwa/0.7.9, bwa/0.7.10
  cmplrs/intel: cmplrs/intel/14.0
  gcc: gcc/4.2.3
  git: git/1.6.3.1, git/1.7.4, git/1.7.4.3
  gotoblas: gotoblas/1.20, gotoblas/1.26, gotoblas/1.30-beta, gotoblas/1.30, gotoblas/1.31, gotoblas/1.32, gotoblas/1.33
    Blas Level 1, 2, 3 routines
  greenlet: greenlet/0.4.0
    The greenlet package is a spin-off of Stackless, a version of CPython that supports micro-threads called "tasklets". Tasklets run pseudo-concurrently (typically in a single or a few OS-level threads) and are synchronized with data exchanges on "channels". A "greenlet", on the other hand, is
    a still more primitive notion of micro-thread with no implicit scheduling; coroutines, in other words. This is useful when you want to control exactly when your code runs. - Homepage: https://github.com/python-greenlet/greenlet
  intel: intel/intel
  is-dyna: is-dyna/1.0, is-dyna/2.0
  junk/a/c: junk/a/c/1.0
  junk/b/c: junk/b/c/2.0
  junk/d: junk/d/3.0
  local: local/local
  mpi/openmpi: mpi/openmpi/1.6.5
  mpich2: mpich2/1.0.7
  multi: multi/multi
  noweb: noweb/2.10c
  openmpi: openmpi/1.2.6
  parmetis: parmetis/3.1, parmetis/4.0.1
    Parallel graph partitioning and fill-reduction matrix ordering routines
  petsc: petsc/3.1, petsc/3.2
  phdf5: phdf5/1.8.2, phdf5/1.8.9, phdf5/1.8.10
  r: r/2.1.5
  unix: unix/unix
To learn more about a package enter:
   $ module spider Foo
where "Foo" is the name of a module
To find detailed information about a particular package you
must enter the version if there is more than one version:
   $ module spider Foo/11.1
===========================
step 21
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider gromacs
===========================
  apps/gromacs:
     Versions:
        apps/gromacs/4.0.7
        apps/gromacs/4.6.3-debug
        apps/gromacs/4.6.3
  For detailed information about a specific "apps/gromacs" module (including how to load the modules) use the module's full name.
  For example:
     $ module spider apps/gromacs/4.6.3
===========================
step 22
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider apps/gromacs
===========================
  apps/gromacs:
     Versions:
        apps/gromacs/4.0.7
        apps/gromacs/4.6.3-debug
        apps/gromacs/4.6.3
     Other possible modules matches:
        apps
  To find other possible module matches do:
      module -r spider '.*apps/gromacs.*'
  For detailed information about a specific "apps/gromacs" module (including how to load the modules) use the module's full name.
  For example:
     $ module spider apps/gromacs/4.6.3
===========================
step 23
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider apps/gromacs/4.6.3
===========================
  apps/gromacs: apps/gromacs/4.6.3
    You will need to load all module(s) on any one of the lines below before the "apps/gromacs/4.6.3" module is available to load.
      cmplrs/intel/14.0  mpi/openmpi/1.6.5
===========================
step 24
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider apps/gromacs/4.6.3-debug
===========================
  apps/gromacs: apps/gromacs/4.6.3-debug
    You will need to load all module(s) on any one of the lines below before the "apps/gromacs/4.6.3-debug" module is available to load.
      cmplrs/intel/14.0  mpi/openmpi/1.6.5
===========================
step 25
lua ProjectDIR/src/lmod.in.lua bash --regression_testing use ProjectDIR/rt/spider/mf/Core3
===========================
===========================
step 26
lua ProjectDIR/src/lmod.in.lua bash --regression_testing spider smrt
===========================
  smrt: smrt/2.3
    This module can be loaded directly: module load smrt/2.3
